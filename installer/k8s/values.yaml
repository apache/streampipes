# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# lite or full (default: lite)
deployment: lite
preferredBroker: "nats"
pullPolicy: "Always"
restartPolicy: Always
persistentVolumeReclaimPolicy: "Delete"
persistentVolumeAccessModes: "ReadWriteOnce"
initialDelaySeconds: 60
periodSeconds: 30
failureThreshold: 30
hostPath: ""

streampipes:
  version: "0.93.0-SNAPSHOT"
  registry: "apachestreampipes"
  core:
    appName: "backend"
    port: 8030
    persistence:
      storageClassName: "hostpath"
      storageSize: "1Gi"
      claimName: "backend-pvc"
      pvName: "backend-pv"
    service:
      name: "backend"
      port: 8030
  ui:
    appName: "ui"
    resolverActive: true
    port: 8088
    # DNS resolver when using the Nginx proxy
    resolver: "kube-dns.kube-system.svc.cluster.local"
    service:
      name: "ui"
      type: "ClusterIP"
      nodePort: 8088
      port: 8088
  ingress:
    active: false
    annotations: {}
    #className: ""
    host: ""
  # Ingressroute for running StreamPipes behind Traefik
  ingressroute:
    active: true
    annotations: {}
    entryPoints:
      - web
      - websecure
    host: ""
    certResolverActive: true
    certResolver: ""

extensions:
  iiot:
    appName: extensions-all-iiot
    port: 8090
    service:
      name: extensions-all-iiot
      port: 8090

external:
  consul:
    appName: "consul"
    version: 1.14.3
    webPort: 8500
    dnsPort: 8600
    persistence:
      storageClassName: "hostpath"
      storageSize: "1Gi"
      claimName: "consul-pvc"
      pvName: "consul-pv"
    service:
      name: "consul"
      webPort: 8500
      dnsPort: 8600
  couchdb:
    appName: "couchdb"
    version: 3.3.1
    user: "admin"
    password: "admin"
    port: 5984
    service:
      name: "couchdb"
      port: 5984
    persistence:
      storageClassName: "hostpath"
      storageSize: "1Gi"
      claimName: "couchdb-pvc"
      pvName: "couchdb-pv"
  influxdb:
    appName: "influxdb"
    version: 2.6
    username: "admin"
    password: "sp-admin"
    adminToken: "sp-admin"
    initOrg: "sp"
    initBucket: "sp"
    # For database migration in v0.91.0 - set init mode to 'upgrade' to migrate an existing installation
    initMode: "setup"
    apiPort: 8083
    httpPort: 8086
    grpcPort: 8090
    service:
      name: "influxdb"
      apiPort: 8083
      httpPort: 8086
      grpcPort: 8090
    persistence:
      storageClassName: "hostpath"
      storageSize: "1Gi"
      storageSizeV1: "1Gi"
      claimName: "influxdb2-pvc"
      claimNameV1: "influxdb-pvc"
      pvName: "influxdb2-pv"
      pvNameV1: "influxdb-pv"
  nats:
    appName: "nats"
    port: 4222
    version:
    service:
      type: "NodePort"
      externalTrafficPolicy: "Local"
      name: "nats"
      port: 4222
  kafka:
    appName: "kafka"
    version: 2.2.0
    port: 9092
    service:
      name: "kafka"
      port: 9092
    persistence:
      storageClassName: "hostpath"
      storageSize: "1Gi"
      claimName: "kafka-pvc"
      pvName: "kafka-pv"
  zookeeper:
    appName: "zookeeper"
    version: 3.4.13
    port: 2181
    service:
      name: "zookeeper"
      port: 2181
    persistence:
      storageClassName: "hostpath"
      storageSize: "1Gi"
      claimName: "zookeeper-pvc"
      pvName: "zookeeper-pv"



