# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: build-and-deploy-docker-dev

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - 'rel/**'
jobs:
  build-and-push-to-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json

      - name: Build with Maven
        run: mvn clean verify

      - name: Set env variables for Docker builds
        run: |
          echo "MVN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          echo "DOCKERHUB_APACHE_REPO=apachestreampipes" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./streampipes-service-core
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: true
          tags: ${{ env.DOCKERHUB_APACHE_REPO }}/backend:${{ env.MVN_VERSION }}

      - name: Build and Push Docker Core Minimal Image
        uses: docker/build-push-action@v5
        with:
          context: ./streampipes-service-core-minimal
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: true
          tags: ${{ env.DOCKERHUB_APACHE_REPO }}/backend-minimal:${{ env.MVN_VERSION }}

      - name: Build UI
        working-directory: ./ui
        run: |
          npm install
          npm run build

      - name: Build and Push Docker UI Image
        uses: docker/build-push-action@v5
        with:
          context: ./ui
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: true
          tags: ${{ env.DOCKERHUB_APACHE_REPO }}/ui:${{ env.MVN_VERSION }}

      - name: Build and Push Docker Image extensions-all-jvm
        uses: docker/build-push-action@v5
        with:
          context: ./streampipes-extensions/streampipes-extensions-all-jvm
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: true
          tags: ${{ env.DOCKERHUB_APACHE_REPO }}/extensions-all-jvm:${{ env.MVN_VERSION }}

#      - name: Build and Push Docker Image pipeline-elements-experimental-flink
#        uses: docker/build-push-action@v5
#        with:
#          context: ./streampipes-extensions/streampipes-pipeline-elements-experimental-flink
#          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
#          push: true
#          tags: ${{ env.DOCKERHUB_APACHE_REPO }}/pipeline-elements-experimental-flink:${{ env.MVN_VERSION }}

      - name: Build and Push Docker Image extensions-all-iiot
        uses: docker/build-push-action@v5
        with:
          context: ./streampipes-extensions/streampipes-extensions-all-iiot
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: true
          tags: ${{ env.DOCKERHUB_APACHE_REPO }}/extensions-all-iiot:${{ env.MVN_VERSION }}

      - name: Build and Push Docker Image extensions-iiot-minimal
        uses: docker/build-push-action@v5
        with:
          context: ./streampipes-extensions/streampipes-extensions-iiot-minimal
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: true
          tags: ${{ env.DOCKERHUB_APACHE_REPO }}/extensions-iiot-minimal:${{ env.MVN_VERSION }}

